
Diagnostics:
error: Break outside of a loop not currently supported in inline functions
  ┌─ tests/checking/inlining/break_continue_in_lambda.move:3:9
  │
3 │         break;
  │         ^^^^^

error: Break outside of a loop not supported in function-typed arguments (lambda expressions)
   ┌─ tests/checking/inlining/break_continue_in_lambda.move:40:26
   │
40 │                 brk2(| | break);
   │                          ^^^^^

// -- Model dump before bytecode pipeline
module 0xc0ffee::m {
    public fun bar(): u64 {
        {
          let i: u64 = 0;
          loop {
            if Lt<u64>(i, 10) {
              i: u64 = Add<u64>(i, 1);
              if Eq<u64>(i, 5) {
                {
                  let ();
                  {
                    let ();
                    break
                  };
                  Tuple()
                };
                {
                  let ();
                  {
                    let ();
                    loop {
                      if true {
                        break
                      } else {
                        break
                      }
                    }
                  };
                  Tuple()
                };
                {
                  let ();
                  {
                    let ();
                    loop {
                      if true {
                        continue
                      } else {
                        break
                      }
                    }
                  };
                  Tuple()
                };
                Tuple()
              } else {
                Tuple()
              }
            } else {
              break
            }
          };
          i
        }
    }
    private fun broken() {
        break;
        Tuple()
    }
    private fun continued() {
        continue;
        Tuple()
    }
    public fun foo(): u64 {
        {
          let i: u64 = 0;
          loop {
            if Lt<u64>(i, 10) {
              i: u64 = Add<u64>(i, 1);
              if Eq<u64>(i, 5) {
                {
                  let ();
                  break;
                  Tuple()
                };
                {
                  let ();
                  loop {
                    if true {
                      break;
                      Tuple()
                    } else {
                      break
                    }
                  }
                };
                {
                  let ();
                  loop {
                    if true {
                      continue;
                      Tuple()
                    } else {
                      break
                    }
                  }
                };
                Tuple()
              } else {
                Tuple()
              }
            } else {
              break
            }
          };
          i
        }
    }
    spec fun $bar(): u64;
    spec fun $brk();
    spec fun $brk2(f: |()|());
    spec fun $brk3();
    spec fun $brk4();
    spec fun $broken();
    spec fun $continued();
    spec fun $foo(): u64;
} // end 0xc0ffee::m
